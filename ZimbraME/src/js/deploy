/*
 * ***** BEGIN LICENSE BLOCK *****
 * Zimbra Collaboration Suite J2ME Client
 * Copyright (C) 2007, 2008, 2010 Zimbra, Inc.
 * 
 * The contents of this file are subject to the Zimbra Public License
 * Version 1.3 ("License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://www.zimbra.com/license.
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * ***** END LICENSE BLOCK *****
 */
<%@ page import="java.sql.*" %>
<%@ page import="java.io.*" %>
<%@ page import="com.zimbra.common.localconfig.*" %>
<%@ page import="com.zimbra.common.util.*" %>
<%

String actionParam = request.getParameter("a");
String brand = request.getParameter("b");
String model = request.getParameter("m");
String version = request.getParameter("v");
String locale = request.getParameter("l");
if (locale == null)
    locale = "en_US";

String user = LC.get("zimbra_mysql_user");
String pwd = LC.get("zimbra_mysql_password");
String mysqlHost = LC.get("mysql_bind_address");
String mysqlPort = LC.get("mysql_port");
String connectionURL = "jdbc:mysql://"+mysqlHost+":"+mysqlPort+"/zimbrame";
Class.forName("com.mysql.jdbc.Driver").newInstance();
Connection conn = DriverManager.getConnection(connectionURL, user, pwd);

try {

    String ua = request.getHeader("User-Agent");
    String ip = request.getRemoteAddr();
    Timestamp ts = new Timestamp(System.currentTimeMillis());
    // 1: download, 2: instal, 3: uninstall
    int action = (actionParam == null || actionParam.compareTo("install") == 0) ? 2 : 3;
    PreparedStatement stmt = conn.prepareStatement(
        "INSERT INTO stats (ip,ua,timestamp,action,brand,model,version,locale)" +
        " VALUES (?,?,?,?,?,?,?,?)");
    int pos = 1;
    stmt.setString(pos++, ip);
    stmt.setString(pos++, ua);
    stmt.setTimestamp(pos++, ts);
    stmt.setInt(pos++, action);
    stmt.setString(pos++, brand);
    stmt.setString(pos++, model);
    stmt.setString(pos++, version);
    stmt.setString(pos++, locale);
    stmt.executeUpdate();
    response.setStatus(200);
    
} finally {
    conn.close();
}

out.println("<html><body>success</body></html>");
%>
