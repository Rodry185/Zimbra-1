/*
 * ***** BEGIN LICENSE BLOCK *****
 * Zimbra Collaboration Suite J2ME Client
 * Copyright (C) 2007, 2008, 2010 Zimbra, Inc.
 * 
 * The contents of this file are subject to the Zimbra Public License
 * Version 1.3 ("License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://www.zimbra.com/license.
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * ***** END LICENSE BLOCK *****
 */
<%@ page import="java.sql.*" %>
<%@ page import="java.io.*" %>
<%@ page import="com.zimbra.common.localconfig.*" %>
<%@ page import="com.zimbra.common.util.*" %>
<%
String jadContentType = "text/vnd.sun.j2me.app-descriptor";
String contentDisposition = "Content-Disposition";
String jadContentDisposition= "disposition=attachment; filename=zimbrame.jad";
String brand = request.getParameter("b");
String model = request.getParameter("m");
String version = request.getParameter("v");
String email = request.getParameter("e");
String locale = request.getParameter("l");
if (locale == null)
    locale = "en_US";

if (brand == null || model == null) {
    response.sendError(400);
    return;
}

String user = LC.get("zimbra_mysql_user");
String pwd = LC.get("zimbra_mysql_password");
String mysqlHost = LC.get("mysql_bind_address");
String mysqlPort = LC.get("mysql_port");
String connectionURL = "jdbc:mysql://"+mysqlHost+":"+mysqlPort+"/zimbrame";
Class.forName("com.mysql.jdbc.Driver").newInstance();
Connection conn = DriverManager.getConnection(connectionURL, user, pwd);

try {

	PreparedStatement stmt = conn.prepareStatement(
	    "SELECT id,jadfile,version FROM devices WHERE brand = ? AND model = ? AND locale = ?");
	int pos = 1;
	stmt.setString(pos++, brand);
	stmt.setString(pos++, model);
	stmt.setString(pos++, locale);
	
	ResultSet rs = stmt.executeQuery();
	String id = null;
	String jadfile = null;
	while (rs.next()) {
	    String v = rs.getString("version");
	    String j = rs.getString("jadfile");
	    if (jadfile == null) {
	        jadfile = j;
	        id = rs.getString("id");
	    }
	    else if (version != null && v != null && version.compareTo(v) == 0) {
	        jadfile = j;
	        id = rs.getString("id");
	    }
	}
	
	rs.close();
	
	if (jadfile != null) {
	    String ua = request.getHeader("User-Agent");
	    String ip = request.getRemoteAddr();
	    Timestamp ts = new Timestamp(System.currentTimeMillis());
	    int action = 1;   // 1: download, 2: instal, 3: uninstall
	    stmt = conn.prepareStatement(
	        "INSERT INTO stats (brand,model,version,ip,ua,email,locale,timestamp,action)" +
	        " VALUES (?,?,?,?,?,?,?,?,?)");
	    pos = 1;
	    stmt.setString(pos++, brand);
	    stmt.setString(pos++, model);
	    stmt.setString(pos++, version);
	    stmt.setString(pos++, ip);
	    stmt.setString(pos++, ua);
	    stmt.setString(pos++, email);
	    stmt.setString(pos++, locale);
	    stmt.setTimestamp(pos++, ts);
	    stmt.setInt(pos++, action);
	    stmt.executeUpdate();
	}
	
	File jad = new File(jadfile);
	
	response.setContentType(jadContentType);
	response.setHeader(contentDisposition, jadContentDisposition);
	ByteUtil.copy(new FileInputStream(jad), true, response.getOutputStream(), true);

} finally {
    conn.close();
}

%>
